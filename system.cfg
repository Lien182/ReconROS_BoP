#
# General settings
#
#   Name        - application name
#
[General]
Name = RecoBop

[Devices]
zed_slv(0:1)   = zed_97
zed_ma          = zed_99

#
# Resource definition
#
#   <Name> - type,<optional arguments>
#
[ResourceGroup@Cycle_Timer]
cmd_cond = cond
cmd_mutex = mutex

[ResourceGroup@Servo(0:2)]
legangle_msg = rosmsg, bop_msg ,msg ,Legangle 
servo_node = rosnode, "servo_node_%"
SubData = rossub, servo_node,legangle_msg, "legangle_%", 1000

[ResourceGroup@Touch(0:2)]
position_msg = rosmsg, bop_msg ,msg, Position 
touch_node = rosnode, "touch_node_%"
PubData = rospub, touch_node, position_msg, "position_%"

[ResourceGroup@Inverse(0:2)]
legangle_msg = rosmsg, bop_msg ,msg ,Legangle 
rotation_msg = rosmsg, bop_msg ,msg ,Rotation 
inverse_node = rosnode, "inverse_node_%"
PubData = rospub, inverse_node, legangle_msg, "legangle_%"
SubData = rossub, inverse_node, rotation_msg, "rotation_%", 1000

[ResourceGroup@Control(0:2)]
position_msg = rosmsg, bop_msg ,msg, Position 
rotation_msg = rosmsg, bop_msg ,msg ,Rotation 
control_node = rosnode, "control_node_%"
SubData = rossub, control_node, position_msg, "position_%", 1000
PubData = rospub, control_node, rotation_msg, "rotation_%"

[ResourceGroup@Legacy_0]
inverse_0_cmd = mbox,256

[ResourceGroup@Video]
image_msg_out = rosmsg, sensor_msgs ,msg ,Image 
node_1 = rosnode, "BoP_ImgSubscriber"
PubData = rospub, node_1, image_msg_out, "/image_raw"
cmd = mbox, 128


#
# Specification of thread types
#
#   Slot          - slot to implement the hardware thread in
#   Source        - source if the hardware thread
#   ResourceGroup - resources of the hardware thread
#



#Demonstrator 0
[ReconosThread@Servo]
Slot = zed_ma.Servo(*)
#HwSource = vhdl
SwSource = c
ResourceGroup = Servo_0
UseMem = true

[ReconosThread@Touch]
Slot = zed_ma.Touch(*)
#HwSource = vhdl
SwSource = c
ResourceGroup = Touch, Cycle_Timer
UseMem = true

[ReconosThread@Control]
Slot = zed_ma.Control(*), zed_slv(0:2).Control(*)
HwSource = hls
SwSource = c
ResourceGroup = Control, Cycle_Timer, Legacy_0
UseMem = true

[ReconosThread@Inverse]
Slot = zed_ma.Inverse(*), zed_slv(0:2).Inverse(*)
HwSource = hls
SwSource = c
ResourceGroup = Inverse, Cycle_Timer, Legacy_0
UseMem = true

[ReconosThread@Sobel]
Slot = zed_ma.Sobel(*), zed_slv(0:2).Sobel(*)
#HwSource = hls
SwSource = c
ResourceGroup = Video
#UseMem = true

#[ReconosThread@Color2bw]
#Slot = RGB2GR(*)
#HwSource = hls
#SwSource = c
#ResourceGroup = Video, Reconfiguration_V
#UseMem = true

[ReconosThread@Framegrabber]
Slot = zed_ma.Framegrabber(*)
#HwSource = vhdl
SwSource = c
UseMem = true


#[ReconosThread@Monitor]
#Slot = Monitor(*)
#HwSource = hls
#ResourceGroup = Video
#UseMem = true
#VideoOut = true